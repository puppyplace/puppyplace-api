# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- develop

pool:
  vmImage: ubuntu-latest

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'puppyplacepetshop'
    scannerMode: 'Other'
- task: Maven@3
  displayName: 'Unit tests'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    goals: 'clean verify -Dsonar.projectKey=puppyplacepetshop_PuppyPlace -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml sonar:sonar'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'JaCoCo'
    sonarQubeRunAnalysis: true
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
- task: SonarCloudPublish@1
- task: Bash@3
  displayName: 'Building application'
  inputs:
    targetType: 'inline'
    script: 'mvn package -Dmaven.test.skip=true'
- task: CopyFiles@2
  displayName: 'Copying files'
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: '**/*.jar'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
- task: Cache@2
  inputs:
    key: '"funcs" | maven |"$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo